<UserControl x:Class="EasySave_3.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:EasySave_3.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">


    <UserControl.Resources>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="FontFamily" Value="corbel"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="LightGray"/>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#5F5F5F"/>
            <Setter Property="BorderBrush" Value="#8A8A8A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0.8"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#F35151"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="#303030"/>
            <Setter Property="FontFamily" Value="corbel"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="65"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="12" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FE7474"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FE7474"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#D61C3E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#D61C3E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="#5F5F5F"/>
            <Setter Property="BorderBrush" Value="#8A8A8A"/>
            <Setter Property="BorderThickness" Value="0.8"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyleLang" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="12" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyleHome" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#5F5F5F"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#5F5F5F   "/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#545353"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#545353"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>


    <Grid Background="#303030">

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>


        <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">

            <TextBlock Style="{DynamicResource TextBlockStyle}"
            Text="{x:Static resx:strings.SVTitle}"
            FontWeight="DemiBold"
            Foreground="LightGray"
            TextWrapping="Wrap" 
            Margin="20" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top" 
            FontSize="30"/>

        </DockPanel>


        <DockPanel Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Margin="190,10,0,60">

            <Image Source="/Assets/LOGO_EASYSAVE.png" Margin="0,0,0,0"/>

        </DockPanel>


        <DockPanel Grid.Row="1" Grid.Column="0" Margin="0,0,-10,0">

            <TextBlock Style="{DynamicResource TextBlockStyle}" 
            Text="{x:Static resx:strings.SVExt1}"
            HorizontalAlignment="Left"
            TextAlignment="Center"
            TextWrapping="Wrap"  
            VerticalAlignment="Center" 
            Margin="25,-10,0,0"/>

            <TextBlock Style="{DynamicResource TextBlockStyle}" 
            Text="{x:Static resx:strings.SVExt2}"
            HorizontalAlignment="Left"
            Foreground="#BEBEBE"
            TextAlignment="Center"
            TextWrapping="Wrap"  
            VerticalAlignment="Center" 
            FontSize="11"
            Margin="5,-9,0,0"/>

        </DockPanel>


        <DockPanel Grid.Row="2" Grid.Column="0">

            <TextBox Style="{DynamicResource TextBoxStyle}" 
            x:Name="ExtensionName" 
            HorizontalAlignment="Center"
            Text="{Binding ExtensionName, UpdateSourceTrigger=PropertyChanged}" 
            TextWrapping="Wrap" 
            VerticalAlignment="Top" 
            Width="90" 
            Height="20"
            Margin="30,-10,10,0"/>

            <Button Style="{DynamicResource ButtonStyle}" 
            Command="{Binding AddExtension}"
            x:Name="AddExtension" 
            Content="{x:Static resx:strings.SVAdd}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top"
            Margin="0,-11,0,0"/>

        </DockPanel>


        <DockPanel Grid.Row="2" Grid.Column="0" Grid.RowSpan="3">

            <ListView Style="{DynamicResource ListViewStyle}" 
            x:Name="ExtensionListView"
            ItemsSource="{Binding Extension}"
            SelectionMode="Single" Width="150" Height="120"
            HorizontalAlignment="Center"
            Margin="30,-10,10,0"
            />

            <Button Style="{DynamicResource ButtonStyle}"
            CommandParameter="{Binding SelectedItem, ElementName=ExtensionListView}"
            Command="{Binding DeleteExtension}"
            x:Name="RemoveExtension" 
            Content="{x:Static resx:strings.SVRemove}" 
            VerticalContentAlignment="Center"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center"
            Margin="0,-15,0,0"/>

        </DockPanel>



        <DockPanel Grid.Row="4" Grid.Column="0" Grid.RowSpan="3">


            <TextBlock Style="{DynamicResource TextBlockStyle}"
                Text="{x:Static resx:strings.SVLang}" 
                HorizontalAlignment="Left"
                TextWrapping="Wrap"  
                VerticalAlignment="Top" 
                FontSize="14"
                Margin="35,45,0,0"/>


            <StackPanel Margin="-15,70,0,0">

                <Button Style="{DynamicResource ButtonStyle}" 
                        Command="{Binding LanguageFrench}"
                        FontFamily="corbel"
                        Content="{x:Static resx:strings.SVLangfr}" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Top" 
                        Margin="0,10,0,0"/>


                <Button Style="{DynamicResource ButtonStyle}"
                Command="{Binding LanguageEnglish}"
                FontFamily="corbel"
                Content="{x:Static resx:strings.SVLangen}" 
                HorizontalAlignment="center" 
                VerticalAlignment="Top" 
                Margin="0,10,0,0"
                />

            </StackPanel>

            <StackPanel Margin="0,0,0,0">

                <Image Source="/Assets/french_flag.png" Margin="0,85,60,10" Height="15"/>
                <Image Source="/Assets/flag_en.png" Margin="0,6,60,10" Height="15"/>

            </StackPanel>


        </DockPanel>





        <DockPanel Grid.Row="4" Grid.Column="2" Grid.RowSpan="2">

            <TextBlock Style="{DynamicResource TextBlockStyle}"
                Text="{x:Static resx:strings.SVConvert}"
                TextWrapping="Wrap"
                HorizontalAlignment="Center"
                Margin="0,45,0,0"/>

        </DockPanel>

        <DockPanel Grid.Row="4" Grid.Column="1" Grid.RowSpan="2">

            <TextBlock Style="{DynamicResource TextBlockStyle}"
                HorizontalAlignment="Center" 
                Text="{x:Static resx:strings.SVMaxSize1}"
                Margin="45,45,0,0"
                TextWrapping="Wrap"/>

            <TextBlock Style="{DynamicResource TextBlockStyle}" 
            Text="{x:Static resx:strings.SVMaxSize2}"
            HorizontalAlignment="Left"
            Foreground="#BEBEBE"
            TextAlignment="Center"
            TextWrapping="Wrap"  
            VerticalAlignment="Top" 
            FontSize="11"
            Margin="5,48,0,0"/>

        </DockPanel>


        <DockPanel Grid.Row="1" Grid.Column="1">

            <TextBlock Style="{DynamicResource TextBlockStyle}"
                x:Name="FilePriority" 
                TextWrapping="Wrap"
                HorizontalAlignment="Center"
                Margin="45,17,0,0"
                Text="{x:Static resx:strings.SVFilePriority1}"/>

            <TextBlock Style="{DynamicResource TextBlockStyle}" 
            Text="{x:Static resx:strings.SVFilePriority2}"
            HorizontalAlignment="Left"
            Foreground="#BEBEBE"
            TextAlignment="Center"
            TextWrapping="Wrap"  
            VerticalAlignment="Center" 
            FontSize="11"
            Margin="5,-8,0,0"/>

        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="2">

            <TextBlock Style="{DynamicResource TextBlockStyle}"
                Text="{x:Static resx:strings.SVJobApp1}"
                TextWrapping="Wrap"
                HorizontalAlignment="Center"
                Margin="45,17,0,0"/>


            <TextBlock Style="{DynamicResource TextBlockStyle}" 
            Text="{x:Static resx:strings.SVJobApp2}"
            HorizontalAlignment="Left"
            Foreground="#BEBEBE"
            TextAlignment="Center"
            TextWrapping="Wrap"  
            VerticalAlignment="Center" 
            FontSize="11"
            Margin="5,-7,0,0"/>

        </DockPanel>





        <DockPanel Grid.Row="5" Grid.Column="2" Margin="0,0,0,0">

            <Button Style="{DynamicResource ButtonStyle}"
            Command="{Binding LogJson}"
            Content="{x:Static resx:strings.SVJson}" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top" 
            Margin="40,17,0,0"
            Width="75"/>

            <Button Style="{DynamicResource ButtonStyle}"
            Command="{Binding LogXml}"
            Content="{x:Static resx:strings.SVXML}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top"
            Margin="10,17,0,0"
            Width="75"/>


        </DockPanel>


        <DockPanel Grid.Row="5" Grid.Column="1" Grid.RowSpan="1">

            <TextBox Style="{DynamicResource TextBoxStyle}"
            x:Name="MaxFileSize" 
            HorizontalAlignment="Left" 
            Text="{Binding MaxFileSize, UpdateSourceTrigger=PropertyChanged}" 
            TextWrapping="Wrap" 
            VerticalAlignment="Top" 
            Width="90"
            Height="20"
            Margin="30,18,0,0"/>

            <Button Style="{DynamicResource ButtonStyle}"
            Command="{Binding SetMaxFileSize}"
            x:Name="MaxFileSizeConfirm" 
            Content="{x:Static resx:strings.SVConfirm}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top"
            Margin="10,17,0,0"/>


        </DockPanel>

        <DockPanel Grid.Column="1" Grid.Row="2">

            <TextBox Style="{DynamicResource TextBoxStyle}"
            x:Name="FilePriorityBox" 
            Text="{Binding FilePriorityName, UpdateSourceTrigger=PropertyChanged}" 
            HorizontalAlignment="Center"
            TextWrapping="Wrap" 
            VerticalAlignment="Top" 
            Width="90" 
            Height="20"
            Margin="30,-10,10,0"/>

            <Button Style="{DynamicResource ButtonStyle}"
            Command="{Binding AddFilePriority}"
            x:Name="AddFilePrio" 
            Content="{x:Static resx:strings.SVAdd}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top"
            Margin="0,-11,0,0"/>

        </DockPanel>




        <DockPanel Grid.Column="2" Grid.Row="6" >

            <Button Style="{DynamicResource ButtonStyleHome}" 
                    Command="{Binding ReturnCommand}" 
                    Margin="0,0,50,0" 
                    Background="Transparent" 
                    BorderBrush="Transparent" 
                    VerticalAlignment="Top" 
                    HorizontalAlignment="Right"
                    Width="45">

                <Image Source="/Assets/home_icon.png" Margin="6"/>

            </Button>

        </DockPanel>





        <DockPanel Grid.Row="2" Grid.Column="2">

            <TextBox Style="{DynamicResource TextBoxStyle}" 
            x:Name="AppJobName" 
            Text="{Binding AppJobName, UpdateSourceTrigger=PropertyChanged}" 
            HorizontalAlignment="Center"
            TextWrapping="Wrap" 
            VerticalAlignment="Top" 
            Width="90" 
            Height="20"
            Margin="30,-10,10,0"/>

            <Button Style="{DynamicResource ButtonStyle}"
            Command="{Binding AddAppJob}"
            x:Name="AddJobApp" 
            Content="{x:Static resx:strings.SVAdd}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Top"
            Margin="0,-11,0,0"/>

        </DockPanel>





        <DockPanel Grid.Row="2" Grid.Column="2" Grid.RowSpan="3">

            <ListView Style="{DynamicResource ListViewStyle}"
            x:Name="AppJobListView" 
            ItemsSource="{Binding AppJob}"
            SelectionMode="Single" Width="150" Height="120"
            HorizontalAlignment="Center"
            Margin="30,-10,10,0"/>

            <Button Style="{DynamicResource ButtonStyle}"
            CommandParameter="{Binding SelectedItem, ElementName=AppJobListView}"
            Command="{Binding DeleteAppJob}"
            x:Name="RemoveJobApp" 
            Content="{x:Static resx:strings.SVRemove}" 
            VerticalContentAlignment="Center"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center"
            Margin="0,-15,0,0"/>


        </DockPanel>





        <DockPanel Grid.Column="1" Grid.Row="2" Grid.RowSpan="3">

            <ListView Style="{DynamicResource ListViewStyle}"
            x:Name="FilePrioList"
            ItemsSource="{Binding FilePriority}"
            SelectionMode="Single" Width="150" Height="120"
            HorizontalAlignment="Center"
            Margin="30,-10,10,0"/>

            <Button Style="{DynamicResource ButtonStyle}"
            CommandParameter="{Binding SelectedItem, ElementName=FilePrioList}"
            Command="{Binding DeleteFilePriority}"
            x:Name="RemoveFilePrio" 
            Content="{x:Static resx:strings.SVRemove}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center"
            Margin="0,-11,0,0"/>

        </DockPanel>





    </Grid>
</UserControl>
